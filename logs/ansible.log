2023-02-18 23:15:56,660 p=1292 u=mdtahmeed n=ansible | servera.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.9"
    },
    "changed": false,
    "ping": "pong"
}
2023-02-18 23:15:56,660 p=1292 u=mdtahmeed n=ansible | serverb.example.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.9"
    },
    "changed": false,
    "ping": "pong"
}
2023-02-18 23:20:40,094 p=1363 u=mdtahmeed n=ansible | PLAY [Running a Container] *********************************************************************************************
2023-02-18 23:20:40,103 p=1363 u=mdtahmeed n=ansible | TASK [Gathering Facts] *************************************************************************************************
2023-02-18 23:20:41,962 p=1363 u=mdtahmeed n=ansible | ok: [servera.example.com]
2023-02-18 23:20:41,968 p=1363 u=mdtahmeed n=ansible | TASK [Check for logged in status] **************************************************************************************
2023-02-18 23:20:42,847 p=1363 u=mdtahmeed n=ansible | fatal: [servera.example.com]: FAILED! => {"changed": true, "cmd": "docker info | grep name", "delta": "0:00:00.511835", "end": "2023-02-18 23:20:42.805806", "msg": "non-zero return code", "rc": 1, "start": "2023-02-18 23:20:42.293971", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-02-18 23:20:42,847 p=1363 u=mdtahmeed n=ansible | ...ignoring
2023-02-18 23:20:42,856 p=1363 u=mdtahmeed n=ansible | TASK [Loging to your docker account] ***********************************************************************************
2023-02-18 23:20:42,863 p=1363 u=mdtahmeed n=ansible | skipping: [servera.example.com]
2023-02-18 23:20:42,866 p=1363 u=mdtahmeed n=ansible | TASK [Create and run a Docker Container] *******************************************************************************
2023-02-18 23:20:43,797 p=1363 u=mdtahmeed n=ansible | fatal: [servera.example.com]: FAILED! => {"changed": false, "msg": "Error starting container 4bbfc55dfbf8b7c5a5f4d13e8044d94b22570437590bafcce61fd676d7dc2310: 500 Server Error for http+docker://localhost/v1.42/containers/4bbfc55dfbf8b7c5a5f4d13e8044d94b22570437590bafcce61fd676d7dc2310/start: Internal Server Error (\"driver failed programming external connectivity on endpoint web (0e9b64c557ea60ca0867111c409a62780715341bd5cdbf82fd45fd6d7f0d53b1): Error starting userland proxy: listen tcp4 0.0.0.0:8080: bind: address already in use\")"}
2023-02-18 23:20:43,798 p=1363 u=mdtahmeed n=ansible | PLAY RECAP *************************************************************************************************************
2023-02-18 23:20:43,798 p=1363 u=mdtahmeed n=ansible | servera.example.com        : ok=2    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=1   
2023-02-18 23:22:30,485 p=1405 u=mdtahmeed n=ansible | PLAY [Running a Container] *********************************************************************************************
2023-02-18 23:22:30,491 p=1405 u=mdtahmeed n=ansible | TASK [Gathering Facts] *************************************************************************************************
2023-02-18 23:22:31,813 p=1405 u=mdtahmeed n=ansible | ok: [servera.example.com]
2023-02-18 23:22:31,818 p=1405 u=mdtahmeed n=ansible | TASK [Check for logged in status] **************************************************************************************
2023-02-18 23:22:32,279 p=1405 u=mdtahmeed n=ansible | fatal: [servera.example.com]: FAILED! => {"changed": true, "cmd": "docker info | grep name", "delta": "0:00:00.083899", "end": "2023-02-18 23:22:32.238378", "msg": "non-zero return code", "rc": 1, "start": "2023-02-18 23:22:32.154479", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-02-18 23:22:32,279 p=1405 u=mdtahmeed n=ansible | ...ignoring
2023-02-18 23:22:32,290 p=1405 u=mdtahmeed n=ansible | TASK [Loging to your docker account] ***********************************************************************************
2023-02-18 23:22:32,297 p=1405 u=mdtahmeed n=ansible | skipping: [servera.example.com]
2023-02-18 23:22:32,301 p=1405 u=mdtahmeed n=ansible | TASK [Create and run a Docker Container] *******************************************************************************
2023-02-18 23:22:33,468 p=1405 u=mdtahmeed n=ansible | changed: [servera.example.com]
2023-02-18 23:22:33,481 p=1405 u=mdtahmeed n=ansible | PLAY [Test container_image container] **********************************************************************************
2023-02-18 23:22:33,486 p=1405 u=mdtahmeed n=ansible | TASK [Gathering Facts] *************************************************************************************************
2023-02-18 23:22:34,207 p=1405 u=mdtahmeed n=ansible | ok: [servera.example.com]
2023-02-18 23:22:34,220 p=1405 u=mdtahmeed n=ansible | TASK [Verify application health] ***************************************************************************************
2023-02-18 23:22:34,592 p=1405 u=mdtahmeed n=ansible | ok: [servera.example.com -> localhost]
2023-02-18 23:22:34,603 p=1405 u=mdtahmeed n=ansible | PLAY RECAP *************************************************************************************************************
2023-02-18 23:22:34,603 p=1405 u=mdtahmeed n=ansible | servera.example.com        : ok=5    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=1   
2023-02-19 00:29:06,488 p=1517 u=mdtahmeed n=ansible | PLAY [Running a Container] ********************************************************************************************************************************************************
2023-02-19 00:29:06,495 p=1517 u=mdtahmeed n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************************************
2023-02-19 00:29:08,333 p=1517 u=mdtahmeed n=ansible | ok: [servera.example.com]
2023-02-19 00:29:08,339 p=1517 u=mdtahmeed n=ansible | TASK [Check for logged in status] *************************************************************************************************************************************************
2023-02-19 00:29:08,793 p=1517 u=mdtahmeed n=ansible | fatal: [servera.example.com]: FAILED! => {"changed": true, "cmd": "docker info | grep name", "delta": "0:00:00.079708", "end": "2023-02-19 00:29:08.752129", "msg": "non-zero return code", "rc": 1, "start": "2023-02-19 00:29:08.672421", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-02-19 00:29:08,793 p=1517 u=mdtahmeed n=ansible | ...ignoring
2023-02-19 00:29:08,801 p=1517 u=mdtahmeed n=ansible | TASK [Loging to your docker account] **********************************************************************************************************************************************
2023-02-19 00:29:08,810 p=1517 u=mdtahmeed n=ansible | skipping: [servera.example.com]
2023-02-19 00:29:08,814 p=1517 u=mdtahmeed n=ansible | TASK [Create and run a Docker Container] ******************************************************************************************************************************************
2023-02-19 00:29:11,017 p=1517 u=mdtahmeed n=ansible | changed: [servera.example.com]
2023-02-19 00:29:11,027 p=1517 u=mdtahmeed n=ansible | PLAY [Test container_image container] *********************************************************************************************************************************************
2023-02-19 00:29:11,032 p=1517 u=mdtahmeed n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************************************
2023-02-19 00:29:11,715 p=1517 u=mdtahmeed n=ansible | ok: [servera.example.com]
2023-02-19 00:29:11,727 p=1517 u=mdtahmeed n=ansible | TASK [Verify application health] **************************************************************************************************************************************************
2023-02-19 00:29:12,010 p=1517 u=mdtahmeed n=ansible | ok: [servera.example.com -> localhost]
2023-02-19 00:29:12,022 p=1517 u=mdtahmeed n=ansible | PLAY RECAP ************************************************************************************************************************************************************************
2023-02-19 00:29:12,023 p=1517 u=mdtahmeed n=ansible | servera.example.com        : ok=5    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=1   
